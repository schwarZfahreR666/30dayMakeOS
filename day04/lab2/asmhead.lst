     1                                  ;os boot asm
     2                                  ;TAB = 4
     3                                  
     4                                  BOTPAK	EQU		0x00280000		;加载bootpack
     5                                  DSKCAC	EQU		0x00100000		;磁盘缓存的位置
     6                                  DSKCAC0	EQU		0x00008000		;磁盘缓存的位置（实时模式）
     7                                  
     8                                  ;BOOT_INFO相关
     9                                  CYLS	EQU		0x0ff0			    ;引导扇区设置
    10                                  LEDS	EQU		0x0ff1
    11                                  VMODE	EQU		0x0ff2			    ;关于颜色的信息
    12                                  SCRNX	EQU		0x0ff4			    ;分辨率X
    13                                  SCRNY	EQU		0x0ff6			    ;分辨率Y
    14                                  VRAM	EQU		0x0ff8			    ;图像缓冲区的起始地址
    15                                      ORG		0xc200
    16                                  ;设定画面模式
    17                                  
    18 00000000 B013                        MOV		AL,0x13			        ;VGA显卡，320x200x8bit
    19 00000002 B400                        MOV		AH,0x00
    20 00000004 CD10                        INT		0x10
    21 00000006 C606F20F08                  MOV		BYTE [VMODE],8	        ;屏幕的模式（参考C语言的引用）
    22 0000000B C706F40F4001                MOV		WORD [SCRNX],320
    23 00000011 C706F60FC800                MOV		WORD [SCRNY],200
    24 00000017 66C706F80F00000A00          MOV		DWORD [VRAM],0x000a0000
    25 00000020 B402                        MOV		AH,0x02
    26 00000022 CD16                        INT		0x16					;keyboard BIOS
    27 00000024 A2F10F                      MOV		[LEDS],AL
    28                                  
    29                                  ;防止PIC接受所有中断
    30                                  ;	AT兼容机的规范、PIC初始化
    31                                  ;	然后之前在CLI不做任何事就挂起
    32                                  ;	PIC在同意后初始化    
    33 00000027 B0FF                        MOV		AL,0xff
    34 00000029 E621                        OUT		0x21,AL
    35 0000002B 90                          NOP						        ;不断执行OUT指令
    36 0000002C E6A1                        OUT		0xa1,AL
    37                                  
    38 0000002E FA                          CLI						        ;进一步中断CPU
    39                                  ;让CPU支持1M以上内存、设置A20GATE
    40                                  
    41 0000002F E8B500                      CALL	waitkbdout
    42 00000032 B0D1                        MOV		AL,0xd1
    43 00000034 E664                        OUT		0x64,AL
    44 00000036 E8AE00                      CALL	waitkbdout
    45 00000039 B0DF                        MOV		AL,0xdf			;enable A20
    46 0000003B E660                        OUT		0x60,AL
    47 0000003D E8A700                      CALL	waitkbdout
    48                                  
    49                                  ;保护模式转换
    50                                  
    51                                  ;[INSTRSET "i486"]				;说明使用486指令
    52                                  
    53 00000040 0F0116[2A01]                LGDT	[GDTR0]			;设置临时GDT
    54 00000045 0F20C0                      MOV		EAX,CR0
    55 00000048 6625FFFFFF7F                AND		EAX,0x7fffffff	;使用bit31（禁用分页）
    56 0000004E 6683C801                    OR		EAX,0x00000001	;bit0到1转换（保护模式过渡）
    57 00000052 0F22C0                      MOV		CR0,EAX
    58 00000055 EB00                        JMP		pipelineflush
    59                                  pipelineflush:
    60 00000057 B80800                      MOV		AX,1*8			; 写32bit的段
    61 0000005A 8ED8                        MOV		DS,AX
    62 0000005C 8EC0                        MOV		ES,AX
    63 0000005E 8EE0                        MOV		FS,AX
    64 00000060 8EE8                        MOV		GS,AX
    65 00000062 8ED0                        MOV		SS,AX
    66                                  
    67                                  ;bootpack传递
    68                                  
    69 00000064 66BE[30010000]              MOV		ESI,bootpack	;源
    70 0000006A 66BF00002800                MOV		EDI,BOTPAK		;目标
    71 00000070 66B900000200                MOV		ECX,512*1024/4
    72 00000076 E87500                      CALL	memcpy
    73                                  
    74                                  ;传输磁盘数据
    75                                  
    76                                  ;从引导区开始
    77                                  
    78 00000079 66BE007C0000                MOV		ESI,0x7c00		;源
    79 0000007F 66BF00001000                MOV		EDI,DSKCAC		;目标
    80 00000085 66B980000000                MOV		ECX,512/4
    81 0000008B E86000                      CALL	memcpy
    82                                  
    83                                  ;剩余的全部
    84                                  
    85 0000008E 66BE00820000                MOV		ESI,DSKCAC0+512	;源
    86 00000094 66BF00021000                MOV		EDI,DSKCAC+512	;目标
    87 0000009A 66B900000000                MOV		ECX,0
    88 000000A0 8A0EF00F                    MOV		CL,BYTE [CYLS]
    89 000000A4 6669C900120000              IMUL	ECX,512*18*2/4	;除以4得到字节数
    90 000000AB 6681E980000000              SUB		ECX,512/4		;IPL偏移量
    91 000000B2 E83900                      CALL	memcpy
    92                                  
    93                                  ;由于还需要asmhead才能完成
    94                                  ;完成其余的bootpack任务
    95                                  
    96                                  ;bootpack启动
    97                                  
    98 000000B5 66BB00002800                MOV		EBX,BOTPAK
    99 000000BB 66678B4B10                  MOV		ECX,[EBX+16]
   100 000000C0 6683C103                    ADD		ECX,3			;ECX += 3;
   101 000000C4 66C1E902                    SHR		ECX,2			;ECX /= 4;
   102 000000C8 7410                        JZ		skip			;传输完成
   103 000000CA 66678B7314                  MOV		ESI,[EBX+20]	;源
   104 000000CF 6601DE                      ADD		ESI,EBX
   105 000000D2 66678B7B0C                  MOV		EDI,[EBX+12]	;目标
   106 000000D7 E81400                      CALL	memcpy
   107                                  skip:
   108 000000DA 66678B630C                  MOV		ESP,[EBX+12]	;堆栈的初始化
   109 000000DF 66EA1B0000001000            JMP		DWORD 2*8:0x0000001b
   110                                  
   111                                  waitkbdout:
   112 000000E7 E464                        IN		 AL,0x64
   113 000000E9 2402                        AND		 AL,0x02
   114 000000EB 75FA                        JNZ		waitkbdout		;AND结果不为0跳转到waitkbdout
   115 000000ED C3                          RET
   116                                  
   117                                  memcpy:
   118 000000EE 66678B06                    MOV		EAX,[ESI]
   119 000000F2 6683C604                    ADD		ESI,4
   120 000000F6 66678907                    MOV		[EDI],EAX
   121 000000FA 6683C704                    ADD		EDI,4
   122 000000FE 6683E901                    SUB		ECX,1
   123 00000102 75EA                        JNZ		memcpy			;运算结果不为0跳转到memcpy
   124 00000104 C3                          RET
   125                                  ;memcpy地址前缀大小
   126                                  
   127 00000105 <res 0000000B>              ALIGNB	16
   127          ******************       warning: uninitialized space declared in .text section: zeroing [-w+other]
   128                                  GDT0:
   129 00000110 <res 00000008>              RESB	8				;初始值
   129          ******************       warning: uninitialized space declared in .text section: zeroing [-w+other]
   130 00000118 FFFF00000092CF00            DW		0xffff,0x0000,0x9200,0x00cf	;写32bit位段寄存器
   131 00000120 FFFF0000289A4700            DW		0xffff,0x0000,0x9a28,0x0047	;可执行的文件的32bit寄存器（bootpack用）
   132                                  
   133 00000128 0000                        DW		0
   134                                  GDTR0:
   135 0000012A 1700                        DW		8*3-1
   136 0000012C [10010000]                  DD		GDT0
   137                                  
   138                                      ALIGNB	16
   139                                  bootpack:
